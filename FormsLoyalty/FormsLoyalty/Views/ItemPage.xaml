<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:prism="http://prismlibrary.com" 
             xmlns:converters="clr-namespace:FormsLoyalty.Converters"
             prism:ViewModelLocator.AutowireViewModel="True"
             x:Class="FormsLoyalty.Views.ItemPage"
             xmlns:resource="clr-namespace:FormsLoyalty"
             xmlns:controls="clr-namespace:FormsLoyalty.Controls"
             xmlns:resources="clr-namespace:FormsLoyalty" 
             xmlns:xct="http://xamarin.com/schemas/2020/toolkit"
             x:Name="itemPage"
             xmlns:ffimage="clr-namespace:FFImageLoading.Forms;assembly=FFImageLoading.Forms"
             Title="{x:Static resources:AppResources.DetailViewDetails}"
             BackgroundColor="WhiteSmoke">


    <ContentPage.Triggers>
        <DataTrigger TargetType="ContentPage"
                             Binding="{Binding IsPageEnabled}"
                             Value="true">
            <Setter Property="BackgroundColor" Value="White"/>
        </DataTrigger>
    </ContentPage.Triggers>
    <ContentPage.Resources>
        <converters:BytesToImageSource x:Key="BytesToImageSource"/>
        <converters:StringToBoolConverter x:Key="StringToBoolConverter"/>
        <xct:IntToBoolConverter x:Key="IntToBoolConverter"/>
    </ContentPage.Resources>

    <!--<ContentPage.ToolbarItems>
        <ToolbarItem IconImageSource="ic_action_stock" Order="Primary" Command="{Binding StockCommand}"/>
        <ToolbarItem IconImageSource="ic_action_navigation_more_vert" Order="Primary" Priority="1" Clicked="moreOption_Clicked"/>
    </ContentPage.ToolbarItems>-->


    <AbsoluteLayout>

        <ScrollView AbsoluteLayout.LayoutBounds="0,0,1,1"
                    x:Name="mainScroll"
                    AbsoluteLayout.LayoutFlags="All">

            <ScrollView.Triggers>
                <DataTrigger TargetType="ScrollView" Binding="{Binding IsPageEnabled}"
                             Value="true">
                    <Setter Property="Opacity" Value="0.5"/>
                    <Setter Property="IsEnabled" Value="False"/>
                </DataTrigger>
            </ScrollView.Triggers>

            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <Grid.RowDefinitions>
                    <RowDefinition Height="300"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <StackLayout Grid.Row="0" Grid.ColumnSpan="2" HorizontalOptions="FillAndExpand" VerticalOptions="Start" >
                    <CarouselView ItemsSource="{Binding Item.Images}"
                          x:Name="carousel"
                  IndicatorView="indicatorView"
                          >
                        <CarouselView.ItemTemplate>
                            <DataTemplate>
                                <StackLayout BackgroundColor="LightGray">

                                    <StackLayout.GestureRecognizers>
                                        <TapGestureRecognizer Command="{Binding BindingContext.ShowPreviewCommand,Source={x:Reference carousel}}"
                                                              CommandParameter="{Binding .}"/>
                                    </StackLayout.GestureRecognizers>

                                    <Frame Visual="Material" Padding="1">

                                        <controls:CustomImageControl ImageHeight="300"  UriImageSource="{Binding Location}"/>

                                        <!--<ffimage:CachedImage Source="{Binding Location}"
                                               HeightRequest="300" DownsampleToViewSize="True"
                               Aspect="AspectFill"/>-->

                                    </Frame>

                                </StackLayout>
                            </DataTemplate>
                        </CarouselView.ItemTemplate>
                    </CarouselView>
                    <IndicatorView x:Name="indicatorView" Margin="10"
                   IndicatorColor="DarkGray"
                   SelectedIndicatorColor="{StaticResource My_Button_Color}"
                   HorizontalOptions="Center" >
                        <IndicatorView.Triggers>
                            <DataTrigger TargetType="IndicatorView" Binding="{Binding Item.Images.Count}" Value="1">
                                <Setter Property="IsVisible" Value="False"/>
                            </DataTrigger>
                        </IndicatorView.Triggers>
                    </IndicatorView>
                </StackLayout>

                <BoxView HeightRequest="0.4" BackgroundColor="Silver" Grid.Row="0" Grid.ColumnSpan="2" VerticalOptions="End"/>

                <Grid Margin="10,0,20,0" Grid.Row="0" Grid.Column="1" HorizontalOptions="EndAndExpand" VerticalOptions="EndAndExpand" TranslationY="30">
                    <BoxView HeightRequest="60" WidthRequest="60" CornerRadius="30"
                         BackgroundColor="{StaticResource My_Header_Color}"/>
                    <Image Source="{Binding WishListIcon}" VerticalOptions="CenterAndExpand" HorizontalOptions="Center"
                           Aspect="AspectFit"
                       HeightRequest="30"/>

                    <Grid.GestureRecognizers>
                        <TapGestureRecognizer Tapped="wishlist_Tapped"/>
                    </Grid.GestureRecognizers>

                </Grid>



                <Label Margin="20,20,20,0"
                   Grid.Row="1" Grid.ColumnSpan="2"
                   FontSize="Title"
                   TextColor="{StaticResource My_Header_Color}"
                   Text="{Binding Item.Description}"/>

                <StackLayout Grid.Row="2" Grid.ColumnSpan="2">


                    <StackLayout  Margin="20,0,20,0">
                        <!--<StackLayout.Triggers>
                            <DataTrigger TargetType="StackLayout"
                                     Binding="{Binding Item.Prices.Count}"
                                     Value="0">
                                <Setter Property="IsVisible" Value="False"/>
                            </DataTrigger>
                        </StackLayout.Triggers>-->


                        <StackLayout IsVisible="{OnPlatform iOS=true, Android=false}" VerticalOptions="Center" Grid.Row="2" 
                                                 Orientation="Horizontal"
                                                 Margin="10,0,10,0">
                            <Label Text="{Binding Item.NewPrice,StringFormat='EGP {0} '}" FontSize="16" FontAttributes="Bold" />
                            <Label Text="{Binding Item.ItemPrice,StringFormat='EGP {0}'}" FontSize="12" TextDecorations="Strikethrough" />
                            <Label Text="{Binding Item.Discount,StringFormat=' ({0:F2} % Off)',Mode=OneWay}" FontSize="16" TextDecorations="Strikethrough" />
                            <StackLayout.Triggers>
                                <DataTrigger TargetType="StackLayout" Binding="{Binding Item.Discount}" Value="0">
                                    <Setter Property="IsVisible" Value="false"/>
                                </DataTrigger>
                            </StackLayout.Triggers>

                        </StackLayout>


                        <Label VerticalOptions="Center" Grid.Row="2" Margin="10,0,10,0" IsVisible="{OnPlatform iOS=false, Android=true}">

                            <Label.FormattedText>
                                <FormattedString>
                                    <Span Text="{Binding Item.NewPrice,StringFormat='EGP {0}'}" FontSize="16" FontAttributes="Bold" />
                                    <Span Text="  " FontSize="16" FontAttributes="Bold" />
                                    <Span Text="{Binding Item.ItemPrice,StringFormat='EGP {0}'}" FontSize="12" TextDecorations="Strikethrough" />
                                    <Span Text="{Binding Item.Discount,StringFormat=' ({0:F2} % Off)',Mode=OneWay}" TextColor="Red" />
                                </FormattedString>
                            </Label.FormattedText>

                            <Label.Triggers>
                                <DataTrigger TargetType="Label" Binding="{Binding Item.Discount}" Value="0">
                                    <Setter Property="IsVisible" Value="false"/>
                                </DataTrigger>
                            </Label.Triggers>

                        </Label>


                        <Label Text="{Binding itemPrice,StringFormat='EGP {0}'}" IsVisible="false" 
                                                   Margin="10,0,10,0" 
                                                   FontSize="16" FontAttributes="Bold">
                            <Label.Triggers>
                                <DataTrigger TargetType="Label" Binding="{Binding Item.Discount}" Value="0">
                                    <Setter Property="IsVisible" Value="true"/>
                                </DataTrigger>
                            </Label.Triggers>
                        </Label>


                    </StackLayout>


                    <Label Margin="20,0,20,0"
                   FontSize="Medium"
                           
                           HorizontalOptions="CenterAndExpand"
                           x:Name="variant"
                   TextColor="{StaticResource My_Header_Color}"
                   Text="{Binding selectVariant}">

                        <Label.Triggers>
                            <DataTrigger TargetType="Label"
                                     Binding="{Binding selectVariant,Converter={StaticResource StringToBoolConverter}}"
                                     Value="false">
                                <Setter Property="IsVisible" Value="False"/>
                            </DataTrigger>
                        </Label.Triggers>

                        <Label.GestureRecognizers>
                            <TapGestureRecognizer Tapped="variant_Tapped"/>
                        </Label.GestureRecognizers>

                    </Label>

                    <StackLayout Orientation="Horizontal" Margin="10">

                        <Label Text="{x:Static resource:AppResources.ApplicationQty}"
                           FontSize="Body"
                           HorizontalOptions="CenterAndExpand"
                           VerticalOptions="CenterAndExpand"/>

                        <controls:CustomStepper Text="{Binding Quantity, StringFormat='{0:F0}'}" Visual="Default"/>


                        <!--<Stepper x:Name="_stepper"  Minimum="1" Margin="10" Maximum="100"  Visual="Material"
                             HorizontalOptions="End" ValueChanged="_stepper_ValueChanged"/>

                        <Entry Text="{Binding Quantity, StringFormat='{0:F0}'}"
                           MaxLength="3"
                           Visual="Default"
                           WidthRequest="60"
                           HorizontalTextAlignment="Center"
               HorizontalOptions="Center"
               VerticalOptions="CenterAndExpand" />-->
                    </StackLayout>


                    <Button Text="{Binding BasketBtn}"
                        
                        Margin="10"
                        Visual="Material"
                        HeightRequest="40"
                        Command="{Binding BasketCommand}"
                        BackgroundColor="{StaticResource My_Button_Color}"
                        TextColor="White"/>



                    <Label Margin="10"
                           TextColor="Black"
                           FontSize="Medium"
                           Text="{x:Static resource:AppResources.DetailViewDetails}"/>

                    <Label Margin="10"
                           TextColor="Black"
                           FontSize="Body"
                           Text="{Binding Item.Details}"/>


                    <Label Margin="10,20,10,0"
                           TextColor="Black"
                           CharacterSpacing="2"
                           Text="{x:Static resources:AppResources.OfferRelatedItems}"
                           FontSize="Medium"
                           FontAttributes="Bold"
                           IsVisible="{Binding RelatedItems.Count,Converter={StaticResource IntToBoolConverter},FallbackValue=false,TargetNullValue=false}"/>


                    <StackLayout xct:StateLayout.CurrentState="{Binding RelatedOfferCurrentState}">
                        <xct:StateLayout.StateViews>

                            <xct:StateView StateKey="Loading" Margin="5,10">
                                <xct:StateView.Template>
                                    <DataTemplate>
                                        <Grid ColumnDefinitions="150,150,150" HeightRequest="100" ColumnSpacing="10">

                                            <Frame Padding="0" CornerRadius="5" HasShadow="True" 
                                                   Visual="Material" 
                                                   HeightRequest="130"
                                                   WidthRequest="150" 
                                                   IsClippedToBounds="True">


                                                <controls:SkeletonView StartColor="#cccccc" EndColor="Gray"
                                                       IsLoading="True"
                                                       HeightRequest="80" Grid.Row="0"/>


                                            </Frame>

                                            <Frame Padding="0" CornerRadius="5" HasShadow="True" Visual="Material" HeightRequest="130" WidthRequest="150" IsClippedToBounds="True" Grid.Column="1">
                                                <controls:SkeletonView StartColor="#cccccc" EndColor="Gray"
                                                   IsLoading="True"
                                                   HeightRequest="80" Grid.Row="0"/>
                                            </Frame>

                                            <Frame Padding="0" CornerRadius="5" HasShadow="True" Visual="Material" HeightRequest="130" WidthRequest="150" IsClippedToBounds="True" Grid.Column="2">
                                                <controls:SkeletonView StartColor="#cccccc" EndColor="Gray"
                                                   IsLoading="True"
                                                   HeightRequest="80" Grid.Row="0"/>
                                            </Frame>

                                        </Grid>

                                    </DataTemplate>
                                </xct:StateView.Template>
                            </xct:StateView>
                            <xct:StateView StateKey="Success">
                                <CollectionView ItemsSource="{Binding RelatedItems}"
                 x:Name="relatedlist"
                 IsVisible="{Binding RelatedItems.Count,Converter={StaticResource IntToBoolConverter},FallbackValue=false,TargetNullValue=false}"
             HorizontalScrollBarVisibility="Never"
             HeightRequest="250"
         Margin="10,0">

                                    <CollectionView.ItemsLayout>
                                        <LinearItemsLayout Orientation="Horizontal" />
                                    </CollectionView.ItemsLayout>

                                    <CollectionView.ItemTemplate>
                                        <DataTemplate>
                                            <StackLayout WidthRequest="150" Padding="5" >
                                                <StackLayout.GestureRecognizers>
                                                    <TapGestureRecognizer Tapped="OnRelatedItemTapped" CommandParameter="{Binding .}"/>
                                                </StackLayout.GestureRecognizers>

                                                <Frame Padding="0" CornerRadius="5" BorderColor="LightGray" Visual="Material">
                                                    <controls:CustomImageControl ImageHeight="200"  UriImageSource="{Binding Images[0].Location}"
                                                  Grid.Row="0"/>


                                                </Frame>
                                                <Label Text="{Binding Description}" LineBreakMode="TailTruncation"
                        MaxLines="2"
                HorizontalTextAlignment="Center"/>
                                            </StackLayout>
                                        </DataTemplate>
                                    </CollectionView.ItemTemplate>
                                </CollectionView>
                            </xct:StateView>
                        </xct:StateLayout.StateViews>
                    </StackLayout>
                </StackLayout>
            </Grid>
        </ScrollView>

        <controls:LoadingView AbsoluteLayout.LayoutBounds="0.5,0.5,1,1"
               AbsoluteLayout.LayoutFlags="All" IsVisible="False">
            <controls:LoadingView.Triggers>
                <DataTrigger TargetType="controls:LoadingView"
                             Binding="{Binding IsPageEnabled}"
                             Value="true">
                    <Setter Property="IsVisible" Value="True"/>

                </DataTrigger>
            </controls:LoadingView.Triggers>

        </controls:LoadingView>

    </AbsoluteLayout>
</ContentPage>